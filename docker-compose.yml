version: '3.8'

services:
  trading-bot:
    build: .
    container_name: crypto-trading-bot
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
    networks:
      - trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: trading-bot-redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - trading-network

  # Optional: Add MongoDB for data storage (uncomment if needed)
  # mongodb:
  #   image: mongo:6
  #   container_name: trading-bot-mongodb
  #   restart: unless-stopped
  #   ports:
  #     - "27017:27017"
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: admin
  #     MONGO_INITDB_ROOT_PASSWORD: password
  #   volumes:
  #     - mongodb_data:/data/db
  #   networks:
  #     - trading-network

  # Optional: Add monitoring with Prometheus (uncomment if needed)
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: trading-bot-prometheus
  #   restart: unless-stopped
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus_data:/prometheus
  #   networks:
  #     - trading-network

  # Optional: Add Grafana for dashboards (uncomment if needed)
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: trading-bot-grafana
  #   restart: unless-stopped
  #   ports:
  #     - "3001:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   networks:
  #     - trading-network
  #   depends_on:
  #     - prometheus

networks:
  trading-network:
    driver: bridge

volumes:
  # redis_data:
  # mongodb_data:
  # prometheus_data:
  # grafana_data: